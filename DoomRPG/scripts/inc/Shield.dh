#ifndef _SHIELD_DH_
#define _SHIELD_DH_

#include "Defs.dh"

#define SHIELD_HEALTH           1000000

AddressSpaceDecl map_array ShieldSpace;

struct ShieldPart
{
    str Actor;
    str Name;
    str Icon;
    str Description;
    
    int Capacity;
    int ChargeRate;
    int DelayRate;
};

enum ShieldAccessory
{
    SHIELD_ACC_NONE,
    SHIELD_ACC_X7,
    SHIELD_ACC_SGENX5B,
    SHIELD_ACC_AMP3000,
    SHIELD_ACC_HRYVP80,
    SHIELD_ACC_DEF2,
    SHIELD_ACC_B1ZUT3,
    SHIELD_ACC_CNVRT99,
    SHIELD_ACC_REKT50,
    SHIELD_ACC_UW0T,
    SHIELD_ACC_CU256,
    SHIELD_ACC_TXBGONN,
    SHIELD_ACC_WRP30LITE,
    SHIELD_ACC_NOVA2,
    SHIELD_ACC_LZY200,
    SHIELD_ACC_BST700,
    SHIELD_ACC_PHD88,
    SHIELD_ACC_BATTB,
    SHIELD_ACC_SHVRZ7,
    SHIELD_ACC_MM12,
    SHIELD_ACC_MRTEKRAR,
    SHIELD_ACC_SP00K,
    SHIELD_ACC_RRG0,
    SHIELD_ACC_E1NT31,
    SHIELD_ACC_PATR0T,
    SHIELD_ACC_RNJSUS2,
    SHIELD_ACC_PWAA9001,
    SHIELD_ACC_AWG01,
    SHIELD_ACC_SCLAR53,
    SHIELD_ACC_RFCT,
    MAX_PARTS
};

struct ShieldInfo
{
    // Current Parts
    int Body;
    int Battery;
    int Capacitor;
    int Accessory;
    
    // Flags
    bool Active;
    bool Full;

    // Stats
    int Charge;
    int Capacity;
    int Interval;
    int ChargeRate;
    fixed DelayRate;
    int Timer;
    int Health;
    
    // Accessories
    bool LightAmp;
    bool Invisibility;
    bool Ghost;
    bool TimeFreezer;
    int GhostTimer;
    int TimeFreezerTimer;
};

extern
{
    variable map_array ShieldPart[4][MAX_PARTS] ShieldData;
    variable map_array int[4] ShieldPartsMax;
};

extern
{
    script void ShieldScript();
};

extern "ACS"
{
    script void ToggleShield(bool) net;
    script void AddShield(int);
    script void AddShieldHealth(int);
};

extern
{
    function void CheckShields();
    function void CheckShieldAccessory();
    function void DrawShieldModel(int, int);
};

#endif
