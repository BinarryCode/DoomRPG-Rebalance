#ifndef _STATS_DH_
#define _STATS_DH_

#define MAX_LEVEL               100
#define MAX_RANK                24
#define COMBO_MAX               35 * 4
#define COMBO_STOP              35 * 2
#define STAT_STRENGTH           0
#define STAT_DEFENSE            1
#define STAT_VITALITY           2
#define STAT_ENERGY             3
#define STAT_REGENERATION       4
#define STAT_AGILITY            5
#define STAT_CAPACITY           6
#define STAT_LUCK               7
#define STAT_MAX                8

struct LevelBonusInfo
{
    bool KillBonus;
    bool ItemsBonus;
    bool SecretsBonus;
    bool AllBonus;
};

extern
{
    variable map_register int SoftStatCap;
    variable map_register int HardStatCap;
};

extern
{
    variable map_array long int[MAX_LEVEL] XPTable;
    variable map_array long int[MAX_RANK] RankTable;
    variable map_array str[25] Ranks;
    variable map_array str[25] LongRanks;
};

extern "ACS"
{
    script void AddXP(int, long int, long int, bool);
};

extern
{
    function void InitTables();
    function void CheckCombo();
    function void CheckLevel();
    function void CheckRank();
    function void CheckLevelInfo();
    function void CheckHealth();
    function void CheckArmorMax();
    function void CheckStats();
    function void CheckStatBonus();
    function void CheckRegen();
    function void DoRegen();
    function void CheckStatCaps();
    function void CheckHardStatCaps();
    function void RecalculateStats();
    function void CheckStatBounds();
    function void CheckLuck();
    function void CheckBurnout();
    function void CheckPerks();
    function void CheckToxicity();
};

#endif
