lib("Arena");

// Arena Script
script ArenaLoop (void)
{
	SetMusic("Outpost", 3);
	ArenaSetEnvironment(0);
	
	// Arena Loop
    while (1)
    {
        // Stop the script if the Arena is stopped or you die
        if (!ArenaActive || GetActorProperty(0, APROP_Health) <= 0)
		{
			ACS_NamedExecuteAlways("ArenaStop", 0);
            return;
		};
        
        // Arena HUD
		ArenaDrawHUD();
        
		// Arena Status Handling
		if (ArenaState == ARENA_INTERMISSION)
		{
			int BonusRandomizer = Random(-10, MAX_BONUS - 1);

			ArenaMod = -1;
			ArenaGetBonus(BonusRandomizer);
			ArenaSetEnvironment(0);
			ArenaState = ARENA_WAITING;
		}
		else if (ArenaState == ARENA_WAITING)
		{
			int Buttons = GetPlayerInput(0, INPUT_BUTTONS);
			
			SetFont("BIGFONT");
			if (!InMenu && !InShop)
				HudMessage("Press \cd%k\c- to start the next wave\nPress \cd%k\c- to exit the Arena\n", "+use" , "+speed",
						   HUDMSG_PLAIN, 0, CR_WHITE, 0.5, 0.75, 0.05);
						
			if (Buttons & BT_USE && (!InMenu && !InShop))
				ArenaState = ARENA_READY;
			if (Buttons & BT_SPEED && (!InMenu && !InShop))
			{
				ACS_NamedExecuteAlways("ArenaStop", 0);
				return;
			};
		}
		else if (ArenaState == ARENA_READY)
		{
			int ModRandomizer = Random(-10, MAX_MODS - 1);
			
			// Clean corpses every couple of waves
            if (ArenaWave > 1 && (ArenaWave % 4) == 1)
				Thing_Remove(1002);

			ArenaWave++;
			ArenaMod = ModRandomizer;
			ArenaSetEnvironment(-1);
			ArenaSpawnMobs();
			ArenaState = ARENA_ACTIVE;
		}
		else if (ArenaState == ARENA_ACTIVE)
		{
			ArenaCheckMod();
			ArenaCount = ThingCount(0, 1002);
			if (ArenaCount <= 0)
				ArenaState = ARENA_INTERMISSION;
			if (ArenaTimerActive && ArenaTimer > 0)
				ArenaTimer--;
		};
		
        Delay(1);
    };
	return;
};

// Stop the Arena session
script ArenaStop (void)
{
	if (ArenaWave > 1)
		{ArenaState = ARENA_WAITING;}
	else
		{ArenaState = ARENA_READY;};
	
	ArenaActive = false;
	
	if (ArenaWave >= ArenaMaxWave)
		ArenaMaxWave = ArenaWave;
	
	ArenaCount = 0;
    ArenaMod = -1;
	ArenaSetEnvironment(0);
    
	Ceiling_RaiseByValue(ArenaSectorTag - 1, 64, 128);
	Thing_Remove(1002);
	
	if (GetActorProperty(0, APROP_Health) <= 0)
		{SetMusic("OutPost", 1);}
	else
		{SetMusic("Outpost", 0);};
	return;
};

// Arena Test Script
script SetArena (int Wave, int Environment, int Bonus)
{
    if (Wave > 0)
		ArenaWave = Wave;
	
	if (Environment >= 0)
		ArenaSetEnvironment(Environment);
	
	if (Bonus >= 0)
		ArenaGetBonus(Bonus);
	return;
};

