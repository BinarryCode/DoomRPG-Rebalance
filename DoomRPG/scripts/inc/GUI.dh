#ifndef _GUI_DH_
#define _GUI_DH_

#include "Defs.dh"

library("GUI");

struct MouseInfo
{
	int X;
	int Y;
	int XAdd;
	int YAdd;
	int Buttons;
	int OldButtons;
	bool LeftButton;
	bool RightButton;
	bool LeftButtonDown;
	bool RightButtonDown;
};

// Pre-define control structs for the GUIWindow
struct GUILabel;
struct GUIIcon;
struct GUIButton;
struct GUIBar;

struct GUIWindow
{
	str Title;
	int X;
	int Y;
	int Width;
	int Height;
	bool Dragging;
	bool Focused;
	
	// Controls
	GUILabel *[MAX_CONTROLS] Labels;
	GUIIcon *[MAX_CONTROLS] Icons;
	GUIButton *[MAX_CONTROLS] Buttons;
	GUIBar *[MAX_CONTROLS] Bars;
};

struct GUILabel
{
	str Text;
	int X;
	int Y;
	int Color;
	
	GUIWindow *Window;
};

struct GUIIcon
{
	str Texture;
	int X;
	int Y;
	int Width;
	int Height;
	
	GUIWindow *Window;
	
	funcpointer void() OnClick;
};

struct GUIButton
{
	str Text;
	int X;
	int Y;
	int Width;
	int Height;
	int Color;
	int HoverColor;
	
	GUIWindow *Window;
	
	funcpointer void() OnClick;
};

struct GUIBar
{
	int X;
	int Y;
	int Value;
	int ValueMax;
	str Texture;
	
	GUIWindow *Window;
};

struct GUITooltip
{
	str Title;
	str Text;
	int Width;
	int Height;
	str Icon;
};

extern "ACS"
{
	script void ToggleGUI();
};

extern
{
	script void CheckCursor();
	script void CheckGUI();
};

extern
{
	function void HandleWindow(GUIWindow *);
	function void HandleLabel(GUILabel *);
	function void HandleIcon(GUIIcon *);
	function void HandleButton(GUIButton *);
	
	function GUIWindow *GUICreateWindow();
	function GUILabel *GUICreateLabel(GUIWindow *);
	function GUIIcon *GUICreateIcon(GUIWindow *);
	function GUIButton *GUICreateButton(GUIWindow *);
	function GUIBar *GUICreateBar(GUIWindow *);
	function GUITooltip *GUICreateTooltip();
	
	function bool InTitleBar(GUIWindow *);
	function bool InRegion(int, int, int, int);
	function void DrawBorder(int, int, int, int);
};

#endif
