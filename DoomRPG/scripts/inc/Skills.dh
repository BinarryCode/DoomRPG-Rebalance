#ifndef _SKILLS_DH_
#define _SKILLS_DH_

struct Skill
{
    str Name;
    int Cost;
    int MaxLevel;
    scriptpointer(Skill *, void *)->bool Use;
    str[MAX_LEVELS] Description;
    int Level;
    int CurrentLevel;
    str Icon;
};

AddressSpaceDecl map_array SkillSpace;
typedef Skill SkillSpace *SkillPtr;

extern
{
    variable SkillSpace Skill[MAX_CATEGORIES][MAX_SKILLS] SkillDataBase;
    
    variable static Skill[MAX_PLAYERS][MAX_CATEGORIES][MAX_SKILLS] _SkillData;

	variable map_register bool Overdrive;
	variable map_register int BulletTimeTimer;
	variable map_register int ForceFieldTID;
    
    variable map_array int[MAX_CATEGORIES] SkillCategoryMax;
};

extern "ACS"
{
    script void SkillWheel() enter;
    script void UseSkill() net;
    script void RemoveAura();
    
    // Skill Scripts
	script bool Heal(Skill *, void *);
    script bool HealSummons(Skill *, void *);
    script bool HealTeam(Skill *, void *);
	script bool LifeLeech(Skill *, void *);
    script bool Decontaminate(Skill *, void *);
	script bool Repair(Skill *, void *);
	script bool PlayerTeleport(Skill *, void *);
	script bool Powerup(Skill *, void *);
	script bool BulletTime(Skill *, void *);
	script bool DropWeapon(Skill *, void *);
	script bool DropAmmo(Skill *, void *);
    script bool UseAura(Skill *, void *);
	script bool Weaken(Skill *, void *);
    script bool Translocate(Skill *, void *);
    script bool Repulse(Skill *, void *);
	script bool Summon(Skill *, void *);
	script bool BreakdownArmor(Skill *, void *);
	script bool ForceWall(Skill *, void *);
	script bool Rally(Skill *, void *);
	script bool Unsummon(Skill *, void *);
	script bool Recall(Skill *, void *);
    script bool WirelessLocker(Skill *, void *);
	script bool Transport(Skill *, void *);
};

extern
{
    function void InitSkills();
    function void BuildSkillData();
    
    function int ScaleEPCost(int);
    function void CheckSkills();
};

#endif
