lib("MapVars");

bool Overdrive;
int SummonID = 2100;
int MaxSummons;
int SkillCostMult;
int BulletTimeMode;
int BulletTimeTimer;

int StatusType;
int StatusTimer;

int PlayerTID = 31337;
int MapNumber;
int ParBonus;

// Stat Bonuses
int StrengthBonus;
int DefenseBonus;
int VitalityBonus;
int EnergyBonus;
int RegenerationBonus;
int AgilityBonus;
int CapacityBonus;
int LuckBonus;

// Secondary Stats
int LevelDamage;				// Damage dependent on the player's level
int BonusDamage;				// Damage bonus given by the Strength stat
int TotalDamage;				// Combined LevelDamage and BonusDamage
int DamageFactor;				// General damage the player will defend against
int Mass;						// Player mass, for preventing knockback
bool AuraBonus;					// Whether to double the max Aura timer
int Speed;						// Movement Speed
int JumpHeight;					// Jump Height
int WeaponSpeed;				// Weapon Speed Increase bsed on Agility
int SurvivalBonus;				// Chance that you will survive a fatal hit

// Misc stat/token stuff
int StatTokens;					// Current Stat Tokens
int SkillTokens;				// Current Skill Tokens
int StatCap;					// Current Stat Cap
int SoftStatCap = 100;			// Soft Stat Cap, this cannot be passed with tokens
int HardStatCap = 400;			// Hard Stat Cap, this cap cannot be passed period

// 100% Bonuses
int Kills;
bool KillBonus;
int Items;
bool ItemsBonus;
int SecretsFound;
bool SecretsBonus;
bool AllBonus;

// HP/EP Regen Timers
int HPRate;
int HPTime;
int HPAmount;
int EPRate;
int EPTime;
int EPAmount;
int LowHealthTimer;
int RegenBoostTimer;

// XP & Rank Tables
int[MAX_LEVEL + 1] XPTable;
int[MAX_RANK + 1] RankTable;

// Luck Chance Percentages
int CreditChance;
int HealthChance;
int ArmorChance;
int PowerupChance;
int RuneChance;
int TokenChance;
int AugChance;
int ShieldChance;
int EPChance;

// Randomizer
int LevelTokens;

// Max Shield Parts per page
int[4] ShieldPartsMax = { 7; 7; 5; 7; };

int ShieldChargeRate;
int ShieldDelayRate;
int BeforeHealth;
int AfterHealth;
int HealthLoss;
int BeforeArmor;
int AfterArmor;
int ArmorLoss;

int ShieldTimer = 175;
int ShieldInterval = 35;
bool ShieldFull = false;
bool Nova = true;

bool InMenu;
int Menu;
int MenuX;
int MenuY;
int MenuIndex;
bool MenuBlock;
int StatAmount;
bool AugSelected;
int SkillPage;
int SkillMax;
int ShieldPage;
int StimSelected;

bool InShop;
int ShopCategories = 8; // 8 vanilla ShopCategories, 8 reserved for compatibility
int ShopIndex;
int ShopOffset;
int ShopPage;
int ShopSpotID = 1000;

bool ArenaActive = false;
bool ArenaTimerActive = false;
int ArenaState = ARENA_READY;
int ArenaSpotSpawns = 1100;
int ArenaSectorTag = 100;

int ArenaWave;
int ArenaTimer;
int ArenaCount;
int ArenaMod;
int ArenaEnvironment;

bool StimActive;
int StimAmount;
int StimCapacity;
int StimTimer;

// Rank strings
str[25] Ranks = {
	"None";
	"Pvt"; "Pvt +";
	"PFC"; "PFC +";
	"LCpl"; "LCpl +";
	"Cpl"; "Cpl +";
	"Sgt"; "Sgt +";
	"SSgt"; "SSgt +";
	"GySgt"; "GySgt +";
	"MSgt"; "MSgt +";
	"1stSgt"; "1stSgt +";
	"MGySgt"; "MGySgt +";
	"SgtMaj"; "SgtMaj +";
	"SgtMajMarCor"; "MSgtMarCor";
};

str[25] LongRanks = {
	"None";
	"Private"; "Private +";
	"Private First Class"; "Private First Class +";
	"Lance Corporal"; "Lance Corporal +";
	"Corporal"; "Corporal +";
	"Sergeant"; "Sergeant +";
	"Staff Sergeant"; "Staff Sergeant +";
	"Gunnery Sergeant"; "Gunnery Sergeant +";
	"Master Sergeant"; "Master Sergeant +";
	"First Sergeant"; "First Sergeant +";
	"Master Gunnery Sergeant"; "Master Gunnery Sergeant +";
	"Sergeant Major"; "Sergeant Major +";
	"Sergeant Major of the Marine Corps"; "Master Sergeant Major of the Marine Corps";
};

// Skill Level Names
str[5] SkillLevels =
{
	"Easy";
	"Normal";
	"Hard";
	"Nightmare";
	"Hell";
};

// Version and Timestamp
str[2] Ver =
{
	"v0.95 Beta";
	"Thursday, February 13, 2014 at 11:44:20 AM";
};

str[MAX_MENU] MainMenu =
{
	"Stats"; "Augmentations"; "Skills"; "Shield"; "Stims"; "Shop";
};

int[MAX_MENU] MainMenuColor =
{
	CR_RED; CR_GREEN; CR_LIGHTBLUE; CR_CYAN; CR_GRAY; CR_GOLD;
};

