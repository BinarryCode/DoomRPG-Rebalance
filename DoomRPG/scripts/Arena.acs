#library "Arena"

#include "zcommon.acs"

#import "Menu.acs"
#import "Shop.acs"
#import "Skills.acs"
#import "Stats.acs"

// Arena defines
#libdefine MAX_MUSIC           1
#libdefine MAX_MODS            1
#libdefine MAX_ENVIRONMENTS    6
#libdefine MAX_BONUS           8

int ArenaActive = false;
int ArenaWave = 0;
int ArenaTimer = 0;
int ArenaTimerMax = 35 * 10;
int ArenaCount = 0;
int ArenaWeight = 0;
int ArenaMod = 0;
int ArenaEnvironment = 0;
int ArenaSpotSpawns = 1100;
int ArenaSectorTag = 100;

str ArenaMods[MAX_MODS] =
{
	"\cgNo Regeneration"
};

str ArenaEnvironments[MAX_ENVIRONMENTS] =
{
	"\cmBlackout",
	"\cjFoggy",
	"\ciThe Floor is Lava",
	"\cuDrop Zone",
	"\cuGrayscale",
	"\caCentral Pillar"
};

str ArenaBonus[MAX_BONUS] =
{
    "\cgFull Health",
    "\cvFull EP",
    "\cfMoney Drop",
    "\cuAmmo Drop",
    "\cgHealth Drop",
    "\cdArmor Drop",
    "\cuWeapon Drop",
	"\cfLuck Drop"
};

str Tier1[6] =
{
    "ZombieMan", "ShotgunGuy", "ChaingunGuy", "DoomImp", "Demon", "Spectre"
};

str Tier2[4] =
{
    "HellKnight", "BaronOfHell", "Cacodemon", "LostSoul"
};

str Tier3[5] =
{
    "PainElemental", "Revenant", "Fatso", "Arachnotron", "ArchVile"
};

str TierBoss[2] =
{
    "Cyberdemon", "SpIDerMastermind"
};

// Arena Script
script "ArenaLoop" (int Start)
{
    if (Start)
    {
        SetMusic(StrParam(s:"Arena", d:Random(1, MAX_MUSIC)));
        
        ArenaWave = 0;
    }
    
    while (1)
    {
        // If you're dead, terminate
        if (GetActorProperty(0, APROP_HEALTH) <= 0) terminate;
        
        // Stop the script if the Arena is stopped
        if (!ArenaActive)
		{
			ArenaSetEnvironment(0);
            terminate;
		}
        
        // Arena HUD
        SetFont("SMALLFONT");
		if (ArenaEnvironment > 0)
            HudMessage(s:ArenaEnvironments[ArenaEnvironment - 1];
                       HUDMSG_PLAIN, 5, CR_WHITE, -0.0225, 0.525, 0.05);
        if (ArenaMod >= 0)
            HudMessage(s:ArenaMods[ArenaMod];
                       HUDMSG_PLAIN, 4, CR_WHITE, -0.0225, 0.55, 0.05);
        if (ArenaTimer > 0)
            HudMessage(s:"Time: ",
                       d:ArenaTimer / 35 + 1;
                       HUDMSG_PLAIN, 3, CR_GREEN, -0.0225, 0.575, 0.05);
        HudMessage(s:"Wave: ",
                   d:ArenaWave;
                   HUDMSG_PLAIN, 2, CR_GREEN, -0.0225, 0.6, 0.05);
        if (ArenaCount > 0)
            HudMessage(s:"Monsters: ",
                       d:ArenaCount;
                       HUDMSG_PLAIN, 1, CR_GREEN, -0.0225, 0.625, 0.05);
        
        // Keep count of the current monsters in the arena
        ArenaCount = ThingCount(0, 1002);
        
        // Make you invincible during the intermission period
        if (ArenaTimer > 0)
            SetActorProperty(0, APROP_Invulnerable, 1);
        else
            SetActorProperty(0, APROP_Invulnerable, 0);
        
        // Main Loop
        if (ArenaCount <= 0)
        {
            int TierRandomizer;
            int SpawnRandomizer;
            int ModRandomizer;
            int EnvironmentRandomizer;
            int BonusRandomizer;
			int LuckRandomizer;
            int Tier;
            int TierMax;
            str SpawnName;
            str SpawnItem;
            int i;

            // Set the intermission timer and reset the environment
            if (ArenaWave >= 1 && ArenaTimer <= 0)
			{
                ArenaTimer = ArenaTimerMax;
				ArenaSetEnvironment(0);
			}
            
            // Arena Bonus between waves
            if (ArenaTimer >= ArenaTimerMax)
            {
                BonusRandomizer = Random(-10, MAX_BONUS - 1);
                if (BonusRandomizer >= 0)
                {
                    SetFont("BIGFONT");
                    HudMessage(s:ArenaBonus[BonusRandomizer]; HUDMSG_FADEOUT, 0, CR_WHITE, 0.5, 0.5, 2.0, 1.0);
                    ActivatorSound("misc/secret", 127);
                }
                switch (BonusRandomizer)
                {
                    case 0: // Full Health
                        HealThing(1000000);
                        break;
                    case 1: // Full EP
                        EP = EPMax;
                        break;
                    case 2: // Money Drop
                        SpawnSpot("TeleportFog", 1200, 0, 0);
                        for (i = 0; i < ArenaWave; i++)
                            if (Random(1, 3) <= 1)
                            {
                                SpawnSpot("MoneyDropper", 1200, 1201, 0);
                                SetActorVelocity(1201, Random(-8, 8) << 16, Random(-8, 8) << 16, Random(-8, 8) << 16, true, false);
                                Thing_ChangeTID(1201, 0);
                            }
                        break;
                    case 3: // Ammo Drop
                        SpawnSpot("TeleportFog", 1200, 0, 0);
                        for (i = 0; i < ArenaWave; i++)
                            if (Random(1, 3) <= 1)
                            {
                                switch (Random(1, 8))
                                {
                                    case 1: SpawnItem = "Clip";         break;
                                    case 2: SpawnItem = "ClipBox";      break;
                                    case 3: SpawnItem = "Shell";        break;
                                    case 4: SpawnItem = "ShellBox";     break;
                                    case 5: SpawnItem = "RocketAmmo";   break;
                                    case 6: SpawnItem = "RocketBox";    break;
                                    case 7: SpawnItem = "Cell";         break;
                                    case 8: SpawnItem = "CellPack";     break;
                                }
                                
                                SpawnSpot(SpawnItem, 1200, 1201, 0);
                                SetActorVelocity(1201, Random(-8, 8) << 16, Random(-8, 8) << 16, Random(-8, 8) << 16, true, false);
                                Thing_ChangeTID(1201, 0);
                            }
                        break;
                    case 4: // Health Drop
                        SpawnSpot("TeleportFog", 1200, 0, 0);
                        for (i = 0; i < ArenaWave; i++)
                            if (Random(1, 3) <= 1)
                            {
                                if (Random(1, 2) == 1)
                                    SpawnItem = "HealthDropper1";
                                else
                                    SpawnItem = "HealthDropper2";
                                
                                SpawnSpot(SpawnItem, 1200, 1201, 0);
                                SetActorVelocity(1201, Random(-8, 8) << 16, Random(-8, 8) << 16, Random(-8, 8) << 16, true, false);
                                Thing_ChangeTID(1201, 0);
                            }
                        break;
                    case 5: // Armor Drop
                        SpawnSpot("TeleportFog", 1200, 0, 0);
                        for (i = 0; i < ArenaWave; i++)
                            if (Random(1, 3) <= 1)
                            {
								if (Random(1, 2) == 1)
									SpawnItem = "GreenArmorRandomizer";
								else
									SpawnItem = "BlueArmorRandomizer";
                                
                                SpawnSpot(SpawnItem, 1200, 1201, 0);
                                SetActorVelocity(1201, Random(-8, 8) << 16, Random(-8, 8) << 16, Random(-8, 8) << 16, true, false);
                                Thing_ChangeTID(1201, 0);
                            }
                        break;
                    case 6: // Weapon Drop
                        SpawnSpot("TeleportFog", 1200, 0, 0);
                        SpawnItem = "WeaponDropper";
                        SpawnSpot(SpawnItem, 1200, 1201, 0);
                        SetActorVelocity(1201, Random(-8, 8) << 16, Random(-8, 8) << 16, Random(-8, 8) << 16, true, false);
                        Thing_ChangeTID(1201, 0);
                        break;
					case 7: // Luck Drop
						LuckRandomizer = (100 - (ArenaWave - Luck));
						if (LuckRandomizer < 10) LuckRandomizer = 10;
                        for (i = 0; i < ArenaWave; i++)
							if (Random(1, LuckRandomizer) < 5)
							{
								SpawnSpot("TeleportFog", 1200, 0, 0);
								SpawnItem = "Dropper";
								SpawnSpot(SpawnItem, 1200, 1201, 0);
								SetActorVelocity(1201, Random(-8, 8) << 16, Random(-8, 8) << 16, Random(-8, 8) << 16, true, false);
								Thing_ChangeTID(1201, 0);
							}
						break;
                }
            }
            
			// Next Wave
            if (ArenaTimer <= 1)
            {
                // Next wave, re-determine the Arena Weight based on the new wave
                ArenaWave++;
                ArenaWeight = (ArenaWave * Random(1, 10));

                // Apply the randomized mod
                ModRandomizer = Random(-10, MAX_MODS - 1);
                ArenaMod = ModRandomizer;
                
				// Apply the randomized environment mod
				EnvironmentRandomizer = Random(-10, MAX_ENVIRONMENTS);
				if (EnvironmentRandomizer > 0)
					ArenaSetEnvironment(EnvironmentRandomizer);
				
                for (i = ArenaSpotSpawns; i < ArenaSpotSpawns + 30; i++)
                {
                    // Use the Arena weight to get a random tier
                    TierRandomizer = Random(1, ArenaWeight);
                    
                    // Get the max indices within a tier depending on the selected tier
                    if (TierRandomizer > 0 && TierRandomizer < 100)
                    {
                        Tier = 1;
                        TierMax = 6;
                    }
                    if (TierRandomizer > 101 && TierRandomizer < 200)
                    {
                        Tier = 2;
                        TierMax = 4;
                    }
                    if (TierRandomizer > 201 && TierRandomizer < 300)
                    {
                        Tier = 3;
                        TierMax = 5;
                    }
                    
                    // Get a random monster from the selected tier
                    SpawnRandomizer = Random(-TierMax + 1, TierMax - 1);
                    switch (Tier)
                    {
                        case 1: SpawnName = Tier1[SpawnRandomizer]; break;
                        case 2: SpawnName = Tier2[SpawnRandomizer]; break;
                        case 3: SpawnName = Tier3[SpawnRandomizer]; break;
                    }
                    
                    // Skip this spawn spot if < 0 is hit by the randomizer
					// TODO: This should be based on wave progression, and not a static determination by the randomizer
                    if (SpawnRandomizer < 0)
                        continue;
                        
                    // Spawn the monster
                    if (SpawnSpotFacingForced(SpawnName, i, 1002))
                        SpawnSpotForced("TeleportFog", i, 0, 0);
					
                    /* Debugging
                    Log(s:"Arena Spawn: Wave ",
                        d:ArenaWave,
                        s:", ModRandomizer = ",
                        d:ModRandomizer,
                        s:", BonusRandomizer = ",
                        d:BonusRandomizer,
                        s:", TierRandomizer = ",
                        d:TierRandomizer,
                        s:", SpawnRandomizer = ",
                        d:SpawnRandomizer,
                        s:", SpawnName = ",
                        s:SpawnName);
                    */
                }
            }
        }
        
		// Arena Mods
		switch (ArenaMod)
		{
			case 0: // No Regeneration
				HPRate = 0;
				EPRate = 0;
				break;
		}
		
        // Decrement the timer, also don't decrement if you have menu freezing enabled and you're in the menus
        if (ArenaTimer > 0 && !(InMenu || InShop) && !CheckInventory("PowerTimeFreezer"))
            ArenaTimer--;
        
        Delay(1);
    }
}

// Stop the Arena session
script "ArenaStop" (voID)
{
    ArenaWave = 0;
    ArenaTimer = 0;
    ArenaCount = 0;
    ArenaWeight = 0;
    ArenaMod = 0;
    
    if (CheckActorProperty(0, APROP_Invulnerable, 1))
        SetActorProperty(0, APROP_Invulnerable, 0);
    
	for (int i = ArenaSpotSpawns; i < ArenaSpotSpawns + 30; i++)
        Thing_Remove(1002);
    
    SetMusic("Outpost");
}

// Set Arena vars
script "SetArena" (int Wave, int Environment)
{
    if (Wave > 0) ArenaWave = Wave;
	ArenaSetEnvironment(Environment);
}

function void ArenaSetEnvironment(int ID)
{
	switch (ID)
	{
		case 0: // Normal
			Light_Fade(ArenaSectorTag, 192, 35);
			Light_Fade(ArenaSectorTag + 1, 192, 35);
			Sector_SetFade(ArenaSectorTag, 0, 0, 0);
			Sector_SetFade(ArenaSectorTag + 1, 0, 0, 0);
			ChangeFloor(ArenaSectorTag, "CEIL5_1");
			ChangeFloor(ArenaSectorTag + 1, "CEIL5_1");
			Sector_SetDamage(ArenaSectorTag, 0, 0);
			Sector_SetDamage(ArenaSectorTag + 1, 0, 0);
			if (ArenaEnvironment == 4)
			{
				Floor_RaiseInstant(ArenaSectorTag, 0, 2048);
				Floor_RaiseInstant(ArenaSectorTag + 1, 0, 2048);
			}
			Sector_SetColor(ArenaSectorTag, 255, 255, 255);
			Sector_SetColor(ArenaSectorTag + 1, 255, 255, 255);
			Floor_LowerToLowest(ArenaSectorTag + 1, 64);
			break;
		case 1: // Blackout
			Light_Fade(ArenaSectorTag, 0, 35);
			Light_Fade(ArenaSectorTag + 1, 0, 35);
			break;
		case 2: // Foggy
			int r = Random(0, 255);
			int g = Random(0, 255);
			int b = Random(0, 255);
			Light_Fade(ArenaSectorTag, 128, 35);
			Light_Fade(ArenaSectorTag + 1, 128, 35);
			Sector_SetFade(ArenaSectorTag, r, g, b);
			Sector_SetFade(ArenaSectorTag + 1, r, g, b);
			break;
		case 3: // The Floor is Lava
			ChangeFloor(ArenaSectorTag, "LAVA1");
			ChangeFloor(ArenaSectorTag + 1, "LAVA1");
			Sector_SetDamage(ArenaSectorTag, 1, 14);
			Sector_SetDamage(ArenaSectorTag + 1, 1, 14);
			break;
		case 4: // Drop Zone
			Floor_LowerInstant(ArenaSectorTag, 0, 2048);
			Floor_LowerInstant(ArenaSectorTag + 1, 0, 2048);
			break;
		case 5: // Grayscale
			Sector_SetColor(ArenaSectorTag, 255, 255, 255, 255);
			Sector_SetColor(ArenaSectorTag + 1, 255, 255, 255, 255);
			break;
		case 6: // Central Pillar
			Teleport(1003);
			Floor_RaiseToLowestCeiling(ArenaSectorTag + 1, 64);
			break;
	}
	
	ArenaEnvironment = ID;
}
