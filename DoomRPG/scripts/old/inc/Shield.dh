#ifndef _SHIELD_DH_
#define _SHIELD_DH_

#include "Defs.dh"

struct ShieldPart
{
    str Actor;
    str Name;
    str Icon;
    
    int Capacity;
    int ChargeRate;
    fixed DelayRate;
};

struct ShieldAccessory
{
    str Actor;
    str Name;
    str Icon;
    int Price;
    str Description;
    EShieldPassive PassiveEffect;
    
    ScriptPtr()         Modifier;
    ScriptPtr()         Equip;
    ScriptPtr(bool)     Unequip;
    ScriptPtr(int)      Damage;
    ScriptPtr()         Break;
    ScriptPtr(int)->int Charge;
    ScriptPtr(int)      Overcharge;
    ScriptPtr()->bool   FastCharge;
    ScriptPtr()         FullCharge;
};

AddressSpaceDecl GlobalArray(4) ShieldSpace;
typedef ShieldPart ShieldSpace *ShieldPartPtr;
typedef ShieldAccessory ShieldSpace *ShieldAccsPtr;

extern
{
    variable ShieldSpace int[3] ShieldPartsMax;
    variable ShieldSpace ShieldPart[3][MAX_PARTS] ShieldParts;
    variable ShieldSpace ShieldAccessory[MAX_ACCESSORIES] ShieldAccessories;
};

extern
{
    script void BuildShieldParts();
    script void ShieldTimer();
    script void ShieldDamage(int);
    script void ShieldBroken();
    script void ShieldTimerReset();
    script bool ActivateShield();
    script bool DeactivateShield();
};

extern "ACS"
{
    script void AMShieldCharge();
    script void ToggleShield() net;
    script void AddShield(int);
    script void AddRemoteShield(int, int);
};

extern
{
    // Accessory Equip/Unequip
    function void RemoveShieldAccessory();
    function void SetShieldAccessory(ShieldAccsPtr);
    
    // Conversions
    script void HealthConversion(int);
    script void EPConversion(int);
    script void BatteryConversion(int);
    script void AmmoConversion(int);
    
    // Charging
    script int LightningCharge(int);
    script int RegenShieldCharge(int);
    script bool CellFastCharge();
    
    // Damage Callbacks
    script void BoosterShieldDamage(int);
    script void SpookyDamage(int);
    script void TimeyWimeyHurtyBall(int);
    script void StaticChargeShieldDamage(int);
    script void CounterDamage(int);
    script void RegenShieldDamage(int);

    // Break Callbacks
    script void NovaShieldBreak();
    script void TeleportBreak();
    script void AdaptiveBreak();
    script void StaticChargeShieldBreak();
    script void FlanExplosion();
    script void SpaghettiShieldBreak();
    
    // Recharge Callbacks
    script void SpaghettiShieldFullCharge();
    script void TeleportFullCharge();
    
    // Modifier Callbacks
    script void X7Mod();
    script void AmpShieldMod();
    script void HurryMod();
    script void Def2Mod();
    script void BlzutMod();
    script void RektMod();
    script void LightAmpMod();
    script void LightAmpUnequip(bool);
    script void InvisibilityMod();
    script void InvisibilityUnequip(bool);
    script void LazyMod();
    script void AccelerativeShieldMod();
    script void TheKillingBoosterMod();
    script void MinuteMaidMod();
    script void AmericaShieldMod();
    script void GhettoLuckMod();
    script void SuperSqueezyScalarMod();
    script void ReflectionMod();
    script void ScarletWeatherRhapsodyShieldMod();
    script void SanicMod();
    script void NakedMod();
    script void BloodyShieldSoRealMod();
    script void FriendshipShieldMod();
    script void ReflectionUnequip(bool);
    script void RegenShieldMod();
    script void MLGNoScopeShieldMod();
    script void RussianRouletteMod();
    script void OCDShieldMod();
    script void ArenaShieldMod();
    script void HowDidYouEvenMod();
    script void OhYeahMod();
    script void McDuckMod();
    script void AmmoSpaceMod();
    script void AmmoSpaceUnequip(bool);
    script void TheAmazingBatteryShieldMod();
    script void LilZiggyMod();
    script void MurderBurgerMod();
    script void LuckyBastardMod();
    script void IronShieldMod();
    script void EPRegenSwapperMod();
    script void HoarderMod();
    
    // General
    function void CheckShields();
    function void CheckShieldAccessory();
    function bool CheckShieldValid();
};

#endif
