// Powerups
actor DRPGSkillInvulnerability1 : PowerupGiver
{
    -INVBAR
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.ADDITIVETIME
    
    Powerup.Type Invulnerable
    Powerup.Color GoldMap
    Powerup.Duration -30
}

actor DRPGSkillInvulnerability2 : DRPGSkillInvulnerability1
{
    Powerup.Mode Reflective
}

actor DRPGSkillInvisibility1 : PowerupGiver
{
    -INVBAR
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.ADDITIVETIME
    
    Powerup.Type Shadow
    Powerup.Strength 100
    Powerup.Duration -30
}

actor DRPGSkillInvisibility2 : DRPGSkillInvisibility1
{
    Powerup.Type Ghost
}

actor DRPGTimeFreezerQuick : PowerupGiver
{
    -INVBAR
    +INVENTORY.AUTOACTIVATE

    Powerup.Type "TimeFreezer"
    Powerup.Color Black
    Powerup.Duration 3
}

// Used for SBARINFO Aura HUD checking, horrible hacks
actor DRPGAura : Inventory
{
    Inventory.Amount 1
    Inventory.MaxAmount 1
}

// Aura Skills
actor DRPGRedAura2x : PowerDamage                   { Powerup.Duration 5 DamageFactor 2.0 }
actor DRPGRedAura4x : PowerDamage                   { Powerup.Duration 5 DamageFactor 4.0 }
actor DRPGRedAuraInfiniteAmmo : PowerInfiniteAmmo   { Powerup.Duration 5 }
actor DRPGGreenAuraIronFeet : PowerIronFeet         { Powerup.Duration 5 }
actor DRPGPinkAuraDrain : PowerDrain                { Powerup.Duration 5 }

// Bullet-Time Skill
actor DRPGSkillBulletTime : PowerupGiver
{
    -INVBAR
    
    +INVENTORY.AUTOACTIVATE
    -INVENTORY.ADDITIVETIME
    
    Powerup.Type TimeFreezer
    Powerup.Duration 60
}

// Repulsion Skill
actor DRPGSkillBlast1 : CustomInventory
{
    +INVENTORY.AUTOACTIVATE
    
    States
    {
    Spawn:
        TNT1 A 0
    Use:
        TNT1 A 0 A_Blast(0, 255, 255, 20, "BlastEffect", "skills/blast")
        Stop
    }
}

actor DRPGSkillBlast2 : DRPGSkillBlast1
{
    States
    {
    Use:
        TNT1 A 0 A_Blast(0, 255, 512, 50, "BlastEffect", "skills/blast")
        Stop
    }
}

actor DRPGSkillBlast3 : DRPGSkillBlast1
{
    States
    {
    Use:
        TNT1 A 0 A_Blast(0, 255, 1024, 100, "BlastEffect", "skills/blast")
        Stop
    }
}

actor DRPGSkillBlast4 : DRPGSkillBlast1
{
    States
    {
    Use:
        TNT1 A 0 A_Blast(0, 255, 2048, 200, "BlastEffect", "skills/blast")
        Stop
    }
}

// Force Field
actor DRPGForceField
{
    Radius 32
    Height 64
    
    +SOLID
    +BRIGHT
    +NOCLIP
    +REFLECTIVE
    +DEFLECT
    
    RenderStyle Add
    Alpha 0.5
    
    States
    {
    Spawn:
        FFLD A 0
    FadeOut:
        FFLD A 3 A_FadeOut(0.001, true)
        Loop
    }
}

actor DRPGForceField2 : DRPGForceField
{
    Radius 64
    Height 128
    
    Scale 2.0
}

actor DRPGTranslocateBall : TelOtherFX1
{
    Radius 6
    Height 1
    Speed 20
    
    SeeSound "weapons/bfgf"
    DeathSound "weapons/bfgx"
    
    Scale 0.5
    
    States
    {
    Spawn:
        BFS1 AB 4 Bright
        Loop
    Death:
        BFE1 ABCDEF 8 Bright
        Stop
    }
}

// Souls
actor DRPGSoulBase : CustomInventory
{
    Inventory.PickupMessage "Picked up a Soul."
    Inventory.PickupSound "skills/buff"
    
    Scale 0.5
    Gravity 0.25
    
    RenderStyle Add
    
    +FLOATBOB
}

actor DRPGSoulRed : DRPGSoulBase
{
    States
    {
    Spawn:
        SOL1 ABCD 4 Bright
        Loop
    Pickup:
        TNT1 A 0 ACS_NamedExecuteAlways("AddCompound", 0, 0, 10)
        TNT1 A 0 ACS_NamedExecuteAlways("SoulEffect", 0, 0)
        Stop
    }
}

actor DRPGSoulGreen : DRPGSoulBase
{
    States
    {
    Spawn:
        SOL2 ABCD 4 Bright
        Loop
    Pickup:
        TNT1 A 0 ACS_NamedExecuteAlways("AddCompound", 0, 1, 10)
        TNT1 A 0 ACS_NamedExecuteAlways("SoulEffect", 0, 1)
        Stop
    }
}

actor DRPGSoulWhite : DRPGSoulBase
{
    States
    {
    Spawn:
        SOL3 ABCD 4 Bright
        Loop
    Pickup:
        TNT1 A 0 ACS_NamedExecuteAlways("AddCompound", 0, 9, 10)
        TNT1 A 0 ACS_NamedExecuteAlways("SoulEffect", 0, 2)
        Stop
    }
}

actor DRPGSoulPink : DRPGSoulBase
{
    States
    {
    Spawn:
        SOL4 ABCD 4 Bright
        Loop
    Pickup:
        TNT1 A 0 ACS_NamedExecuteAlways("AddCompound", 0, 2, 10)
        TNT1 A 0 ACS_NamedExecuteAlways("SoulEffect", 0, 3)
        Stop
    }
}

actor DRPGSoulBlue : DRPGSoulBase
{
    States
    {
    Spawn:
        SOL5 ABCD 4 Bright
        Loop
    Pickup:
        TNT1 A 0 ACS_NamedExecuteAlways("AddCompound", 0, 3, 10)
        TNT1 A 0 ACS_NamedExecuteAlways("SoulEffect", 0, 4)
        Stop
    }
}

actor DRPGSoulPurple : DRPGSoulBase
{
    States
    {
    Spawn:
        SOL6 ABCD 4 Bright
        Loop
    Pickup:
        TNT1 A 0 ACS_NamedExecuteAlways("AddCompound", 0, 4, 10)
        TNT1 A 0 ACS_NamedExecuteAlways("SoulEffect", 0, 5)
        Stop
    }
}

actor DRPGSoulOrange : DRPGSoulBase
{
    States
    {
    Spawn:
        SOL7 ABCD 4 Bright
        Loop
    Pickup:
        TNT1 A 0 ACS_NamedExecuteAlways("AddCompound", 0, 5, 10)
        TNT1 A 0 ACS_NamedExecuteAlways("SoulEffect", 0, 6)
        Stop
    }
}

actor DRPGSoulDarkBlue : DRPGSoulBase
{
    States
    {
    Spawn:
        SOL8 ABCD 4 Bright
        Loop
    Pickup:
        TNT1 A 0 ACS_NamedExecuteAlways("AddCompound", 0, 6, 10)
        TNT1 A 0 ACS_NamedExecuteAlways("SoulEffect", 0, 7)
        Stop
    }
}

actor DRPGSoulYellow : DRPGSoulBase
{
    States
    {
    Spawn:
        SOL9 ABCD 4 Bright
        Loop
    Pickup:
        TNT1 A 0 ACS_NamedExecuteAlways("AddCompound", 0, 7, 10)
        TNT1 A 0 ACS_NamedExecuteAlways("SoulEffect", 0, 8)
        Stop
    }
}

// Mean Things
actor DRPGEPDrain : CustomInventory
{
    +INVENTORY.AUTOACTIVATE
    +NOINTERACTION
    
    States
    {
    Spawn:
        TNT1 A 0
    Use:
        TNT1 A 0 ACS_NamedExecuteAlways("AddEP", 0, -1)
        Stop
    }
}

actor DRPGAuraRemover : CustomInventory
{
    +INVENTORY.AUTOACTIVATE
    +NOINTERACTION
    
    States
    {
    Spawn:
        TNT1 A 0
    Use:
        TNT1 A 0 ACS_NamedExecuteAlways("RemoveAura", 0)
        Stop
    }
}
