TODO:
- Item Descriptions, will have to remove a row or two in the Shop/Locker to make room
- Update DRLA stuff for DRLA Beta 8/Monster Pack Beta 5
- Re-ID every item into a higher range (31000 perhaps?)
- Add learned exotic assembly effects to Password System when using DRLA
- Shop and Locker systems need to handle set bonuses properly, specifically in a called function
- Need sounds for EP, Ammo and Credit stealing from monsters (Kate, bug Bouncy)
- Need new sound for Par Time Bonus
- Compatibility flags should be stored in a static variable, not a CVAR
- Move Powerup HUD timers from SBARINFO into a HUD script
- Add MF_NOWEAKEN and MF_MEGABOSS flags
- Swap level effects of Weaken, increase cost
- Make Weaken less effective on bosses and megabosses
- Finish coding new Shield Accessories
- IKU-N7 sounds
- Detach Arena's reliance from Outpost so that it can work self-contained on it's own map
- Map Events System
  - Get a reward using GetRewardItem() when completing an event
- Portable Turret System
  - Separate level and stats system
  - Create upgrade items (Seryder says he'll make a sprite for me)
  - Give different Upgrade items to boost it's stats
  - Make stats persistent between levels
  - Quick Menu with pages for Stats, Upgrades, position, etc
  - Battery powered, you need to either give it Augmentation batteries or send it back to the Outpost for charging (which costs Credits)
  - Allow different settings for changing from left to right side, front or behind, rotating around the player (orbit upgrade), etc
  - Turret's Capacity and Luck will affect the monster drops of it's kills
  - Ammo must be loaded manually into the turret, user-selectable which ammo the turret uses, ammo determines the type of attack
    - Clips = Basic high-speed hitscan attacks
    - Shells = Slower, pellet-spread attacks
    - Rockets = Rockets
    - Plasma = Plasma
  - Upgrades will cost turret upgrade parts, many will have multiple levels, costing more to acquire each level
    - Damage upgrades
      - Clip = Rate of fire increase
      - Shells = Amount of pellets increase
      - Rockets = Projectile Speed, firing cooldown speed, seeking
      - Plasma = Projectile Speed, bursts (max out at full-auto?), seeking
    - Ammo upgrades
      - Maximum held Ammo capacities
      - Nuclear ammo generation, more points means quicker ammo generation
    - Shielding from different damage types (in 5% upgrade increments up to 50% max)
    - Battery improvements
      - Max battery charge
      - Lower battery consumption
    - Orbiting
    - Full angular control (turret will rotate around and fire at everything, not be forced to follow your facing angle, togglable?)
  - Refit System
    - You have to send the upgrade parts and the turret back to base to be refitted
    - Refitting takes time, more-so depending on how much stuff you send back with it and it's current level

Bugs:
- XP Loss on death is broken
- Multiplayer Player health bars are not showing the fills of the proper players

Launcher:
- Load Order System
- Add new classes for Beta 8

Rewrites:
- Auras, specifically...
  <Kate> I think maybe auras might need it because the current way they works with flags and a timer is kind of strange and hard to follow. Maybe have them be isolated into a single struct which contains the timer and current color (which ones are active), and it could be shared between monsters and players to make transferring them easier. obviously ...
  <Kate> ... monsters wouldn't use the timer part but it would still help to have that stuff bundled together.
  <Kate> in that case you could just reference Player.Aura or Monster->Aura rather than jumping through several checks
  <Kate> actually, monsters *could* use the timer field
  <Kate> in the case of aura steal, how much time to give to the player
- Defs, clean up some inconsistent naming and move some magic numbers to enums which aren't using them yet
  - RegenArea magic numbers
  - Arena environment/drop/etc magic numbers
- Health Bar Script, needs to be properly redone and separated into multiple functions
- Drawing, repetitive and frequently used drawing/printing should be moved into it's own Drawing module
- Input Checking, should be re-written to use the generic CheckInput() method
- Databases, for mod compatibility and allowing the creation of separate patches outside the main library
- Locker, separated into it's own file and split handling into functions and less repeated code
- Password System, re-write to use one hex string instead of 40+ CVARs, also rename it since Password isn't accurate anymore
? Replace "Static" address space with a new DRPGStatic address space which references a different array (May not be necessary?)
