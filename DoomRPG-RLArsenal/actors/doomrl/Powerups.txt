actor InvulnerabilitySphere2 : RLInvulnerabilitySphere Replaces InvulnerabilitySphere
{
	Tag "Invulnerability Sphere - Invulnerability for 30 seconds"
	
	+INVBAR
	+INVENTORY.ADDITIVETIME
	+INVENTORY.PERSISTENTPOWER
	-INVENTORY.ALWAYSPICKUP

	Inventory.DefMaxAmount
	Inventory.InterHubAmount 1000
	Inventory.PickupMessage "$GOTINVUL"
	Inventory.PickupSound "powerups/protect"
	Inventory.UseSound "powerups/protect"
	Inventory.Icon "PINV"
	
	States
	{
	Pickup:
		TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
		Stop
	Use:
		TNT1 A 1 A_TakeInventory ("PowerRLLavaSetBonusInvulnerable")
		TNT1 A 0 A_JumpIfInventory ("RLAmmochainPerk", 1, 2)
		TNT1 A 1 A_GiveInventory ("RLInvulnerabilitySphereNormal")
		stop
		TNT1 A 0 A_GiveInventory ("RLInvulnerabilitySphereMarine")
		stop
	}
}

ACTOR RLInvulnerabilitySphereNormal : PowerupGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
	
	Powerup.Color GoldMap
	Powerup.Type Invulnerable
	Powerup.Duration -30
}

ACTOR RLInvulnerabilitySphereMarine : RLInvulnerabilitySphereNormal
{
	Powerup.Duration -45
}

actor InvulnerabilityCharge2 : CustomInventory Replaces InvulnerabilityCharge
{
	+INVBAR
	+INVENTORY.ADDITIVETIME
	+INVENTORY.PERSISTENTPOWER
	-INVENTORY.ALWAYSPICKUP

	Tag "Invulnerability Charge - Reflective Invulnerability for 30 seconds"

	Inventory.DefMaxAmount
	Inventory.InterHubAmount 1000
	Inventory.PickupMessage "You got an Invulnerability Charge!"
	Inventory.PickupSound "powerups/protect"
	Inventory.UseSound "powerups/protect"
	Inventory.Icon "CRG2"

	States
	{
	Spawn:
		CRG2 ABC 3 Bright
		Loop
	Pickup:
		TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
		Stop
	Use:
		TNT1 A 1 A_TakeInventory ("PowerRLLavaSetBonusInvulnerable")
		TNT1 A 0 A_JumpIfInventory ("RLAmmochainPerk", 1, 2)
		TNT1 A 1 A_GiveInventory ("RLInvulnerabilityChargeNormal")
		stop
		TNT1 A 0 A_GiveInventory ("RLInvulnerabilityChargeMarine")
		stop
	} 
} 

ACTOR RLInvulnerabilityChargeNormal : PowerupGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
	
	Powerup.Color GoldMap
	Powerup.Type Invulnerable
	Powerup.Mode Reflective
	Powerup.Duration -30
}

ACTOR RLInvulnerabilityChargeMarine : RLInvulnerabilityChargeNormal
{
	Powerup.Duration -45
}

ACTOR BlurSphere2 : CustomInventory Replaces BlurSphere
{
	Game Doom

	SpawnID 135

	Tag "Blur Sphere - Partial Invisibility for 60 seconds"
	
	+INVBAR
	+INVENTORY.ADDITIVETIME
	+INVENTORY.PERSISTENTPOWER
	+VISIBILITYPULSE
	+FLOATBOB
	-INVENTORY.ALWAYSPICKUP

	Inventory.DefMaxAmount
	Inventory.InterHubAmount 1000
	Inventory.PickupMessage "You got an Invisibility Sphere!"
	Inventory.PickupSound "powerups/invis"
	Inventory.UseSound "powerups/invis"
	Inventory.Icon "PINS"

	RenderStyle Translucent

	States
	{
	Spawn:
		PINS ABCD 6 Bright
		Loop
	Pickup:
		TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
		Stop
	Use:
		TNT1 A 1 A_TakeInventory ("PowerRLLavaSetBonusInvulnerable")
		TNT1 A 0 A_JumpIfInventory ("RLAmmochainPerk", 1, 2)
		TNT1 A 1 A_GiveInventory ("RLBlurSphereNormal")
		stop
		TNT1 A 0 A_GiveInventory ("RLBlurSphereMarine")
		stop
	}
}	

ACTOR RLBlurSphereNormal : PowerupGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
	
	Powerup.Type Invisibility
	Powerup.Duration -60
}

ACTOR RLBlurSphereMarine : RLBlurSphereNormal
{
	Powerup.Duration -90
}

actor InvisibilityCharge2 : CustomInventory Replaces InvisibilityCharge
{
	+INVBAR
	+INVENTORY.ADDITIVETIME
	+INVENTORY.PERSISTENTPOWER
	-INVENTORY.ALWAYSPICKUP

	Tag "Invisibility Charge - Complete Invisibility for 30 seconds"

	Inventory.DefMaxAmount
	Inventory.InterHubAmount 1000
	Inventory.PickupMessage "You got an Invisibility Charge!"
	Inventory.PickupSound "powerups/invis"
	Inventory.UseSound "powerups/invis"
	Inventory.Icon "CRG1"
	
	States
	{
	Spawn:
		CRG1 ABC 3 Bright
		Loop
	Pickup:
		TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
		Stop
	Use:
		TNT1 A 1 A_TakeInventory ("PowerRLLavaSetBonusInvulnerable")
		TNT1 A 0 A_JumpIfInventory ("RLAmmochainPerk", 1, 2)
		TNT1 A 1 A_GiveInventory ("RLInvisibilityChargeNormal")
		stop
		TNT1 A 0 A_GiveInventory ("RLInvisibilityChargeMarine")
		stop
	}
} 

ACTOR RLInvisibilityChargeNormal : PowerupGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
	
	Powerup.Type Shadow
	Powerup.Strength 100
	Powerup.Duration -30
}

ACTOR RLInvisibilityChargeMarine : RLInvisibilityChargeNormal
{
	Powerup.Duration -45
}

actor RadSuit2 : RLRadSuit Replaces RadSuit
{
	Tag "Radiation Suit - Protects against Damage Floors"

	+INVBAR
	+INVENTORY.ADDITIVETIME
	+INVENTORY.PERSISTENTPOWER
	-INVENTORY.ALWAYSPICKUP
	
	Inventory.DefMaxAmount
	Inventory.InterHubAmount 1000
	Inventory.PickupMessage "You got a Radiation Suit!"
	Inventory.PickupSound "powerups/suit"
	Inventory.UseSound "powerups/suit"
	Inventory.Icon "SUIT"
	
	States
	{
	Pickup:
		TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
		Stop
	Use:
		TNT1 A 0 A_JumpIfInventory ("RLAmmochainPerk", 1, 2)
		TNT1 A 1 A_GiveInventory ("RLRadSuitNormal")
		stop
		TNT1 A 0 A_GiveInventory ("RLRadSuitMarine")
		stop
	}
}

ACTOR RLRadSuitNormal : PowerupGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
	
	Powerup.Type IronFeet
	Powerup.Duration -60
}

ACTOR RLRadSuitMarine : RLRadSuitNormal
{
	Powerup.Duration -90
}

actor Infrared2 : RLInfrared Replaces Infrared
{
	Tag "Night-Vision Goggles - See in the Dark"

	+INVBAR
	+INVENTORY.ADDITIVETIME
	+INVENTORY.PERSISTENTPOWER
	-INVENTORY.ALWAYSPICKUP
	
	Inventory.DefMaxAmount
	Inventory.InterHubAmount 1000
	Inventory.PickupMessage "You got a pair of Infrared Goggles!"
	Inventory.PickupSound "powerups/light"
	Inventory.UseSound "powerups/light"	
	Inventory.Icon "PVIS"
	
	States
	{
	Pickup:
		TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
		Stop
	Use:
		TNT1 A 0 A_JumpIfInventory ("RLAmmochainPerk", 1, 2)
		TNT1 A 1 A_GiveInventory ("RLInfraredNormal")
		stop
		TNT1 A 0 A_GiveInventory ("RLInfraredMarine")
		stop
	}
}

ACTOR RLInfraredNormal : PowerupGiver
{
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
	
	Powerup.Type LightAmp
	Powerup.Duration -120
}

ACTOR RLInfraredMarine : RLInfraredNormal
{
	Powerup.Duration -180
}

actor AllMap2 : RLAllMap Replaces AllMap
{
	Inventory.PickupSound "powerups/map"
}

actor TrackingMap2 : RLTrackingMap Replaces RLTrackingMap
{
	Inventory.PickupSound "powerups/map"
}

actor Berserk2 : RLBerserk Replaces Berserk
{
	Inventory.PickupMessage "$GOTBERSERK"
	Inventory.PickupSound "powerups/berserk"
	Inventory.UseSound "powerups/berserk"
	Inventory.Icon "PSTR"
}

actor Megasphere2 : RLMegasphere Replaces Megasphere
{
	Inventory.PickupMessage "You got a Megasphere!"
	Inventory.PickupSound "powerups/megasphere"

	States
	{
	Pickup:
		TNT1 A 0 A_GiveInventory("SoulSphere", Random(1, 3))
		TNT1 A 0 ACS_NamedExecuteAlways("AddEP", 0, 1000000)
		TNT1 A 0 ACS_NamedExecuteAlways("AddShield", 0, 1000000)
		TNT1 A 0 A_JumpIfInventory ("RLIndestructibleArmorWorn", 1, "NoRepair")
		TNT1 A 0 A_JumpIfInventory ("BasicArmor", 1, 2)
		Stop
	NoRepair:
		TNT1 A 0
		Stop
		TNT1 A 0 A_JumpIfInventory ("RL100ArmorWorn", 1, "100Armor")
		TNT1 A 0 A_JumpIfInventory ("RL150ArmorWorn", 1, "150Armor")
		TNT1 A 0 A_JumpIfInventory ("RL200ArmorWorn", 1, "200Armor")
		TNT1 A 0 A_JumpIfInventory ("RL100RegenArmorWorn", 1, "100Armor")
	100Armor:
		TNT1 A 0 A_GiveInventory("RLArmorBonus100Megasphere", 1)
		Stop
	150Armor:
		TNT1 A 0 A_GiveInventory("RLArmorBonus150Megasphere", 1)
		Stop
	200Armor:
		TNT1 A 0 A_GiveInventory("RLArmorBonus200Megasphere", 1)
		Stop
	}
}

ACTOR PowerRLLavaSetBonusInvulnerable : PowerInvulnerable
{
	Powerup.Duration -9
	inventory.icon ""
	Powerup.Color GoldMap
}
